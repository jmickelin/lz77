THEORY User_Pass IS
Operation(decomp_put_atom) & ff(0) & dd;
Operation(decomp_read_byte) & ff(0) & dd & ah(decomp_output_buffer_end$1 = size(decomp_output)-decomp_written_index+decomp_output_buffer_read$1) & eh(size(decomp_output)-decomp_written_index,decomp_output_buffer_end$1-decomp_output_buffer_read$1,Goal) & pr & ap;
Operation(decomp_ready) & ff(0) & dd & ae(decomp_output,do) & dd & ah(size(do) = decomp_output_buffer_end$1-decomp_output_buffer_read$1+decomp_written_index) & eh(decomp_output_buffer_end$1-decomp_output_buffer_read$1,size(decomp_output)-decomp_written_index,Goal) & eh(decomp_output,do,Goal) & pr & dd & eh(size(do),decomp_output_buffer_end$1-decomp_output_buffer_read$1+decomp_written_index,Goal) & pr;
Operation(decomp_read_byte) & ff(0) & dd & ah(0<=decomp_output_buffer_read$1+1 & decomp_output_buffer_read$1+1<=256) & ap & ah(decomp_written_index-size(decomp_output)+decomp_output_buffer_end$1 = decomp_output_buffer_read$1) & ae(decomp_output,do) & dd & pr & dd & eh(decomp_output_buffer_read$1,decomp_written_index-size(decomp_output)+decomp_output_buffer_end$1,Goal) & ap & dd & ah(dom(decomp_output_buffer$1) = 0..256) & dd & pr;
Operation(decomp_read_byte) & ff(0) & dd & ah(size(decomp_output)-decomp_written_index = decomp_output_buffer_end$1-decomp_output_buffer_read$1) & dd & ah(size(decomp_output)-(decomp_written_index+1) = size(decomp_output)-decomp_written_index-1) & pr & dd & eh(size(decomp_output)-(decomp_written_index+1),size(decomp_output)-decomp_written_index-1,Goal) & ah(decomp_output_buffer_end$1-(decomp_output_buffer_read$1+1) = decomp_output_buffer_end$1-decomp_output_buffer_read$1-1) & pr & dd & eh(decomp_output_buffer_end$1-(decomp_output_buffer_read$1+1),decomp_output_buffer_end$1-decomp_output_buffer_read$1-1,Goal) & pr;
Operation(decomp_put_atom) & ff(0) & dd & ah(qq/|\0 = {}) & pr & dd & eh(qq/|\0,{},Goal) & ah(decomp_output^{}\|/size(decomp_output)+1-(256-decomp_window_remaining$1) = decomp_output\|/size(decomp_output)+1-(256-decomp_window_remaining$1)) & pr & dd & eh(decomp_output^{}\|/size(decomp_output)+1-(256-decomp_window_remaining$1),decomp_output\|/size(decomp_output)+1-(256-decomp_window_remaining$1),Goal) & ah(decomp_window_index$1+0 = decomp_window_index$1) & pr & dd & eh(decomp_window_index$1+0,decomp_window_index$1,Goal) & ah(decomp_window_index$1-1+0 = decomp_window_index$1-1) & pr & dd & eh(decomp_window_index$1-1+0,decomp_window_index$1-1,Goal) & ah(decomp_window_index$1+0 = decomp_window_index$1) & eh(decomp_output\|/size(decomp_output)+1-(256-decomp_window_remaining$1),%nn.(nn : 1..255-(decomp_window_index$1+decomp_window_remaining$1)+1 | (decomp_window$1)(decomp_window_index$1+decomp_window_remaining$1+nn-1))^%nn.(nn : 1..decomp_window_index$1-1-0+1 | (decomp_window$1)(0+nn-1)),Goal) & ae(decomp_window$1,dw) & dd & ae(decomp_window_index$1,di) & dd & ae(decomp_window_remaining$1,dr) & dd & dd;
Operation(Initialisation) & ff(0) & pr & pr & ah((1..256)*{0}/\(0..256)*{0} = (1..256)*{0}) & pr & dd & eh((1..256)*{0}/\(0..256)*{0},(1..256)*{0},Goal) & pr & ah({}\|/0 = {}) & pr & dd & eh({}\|/0,{},Goal) & pr
END
